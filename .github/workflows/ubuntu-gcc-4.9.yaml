#on: [push, pull_request]
on: [push]

jobs:
  build-library:
    runs-on: ubuntu-latest
    #needs: [ prepare ]
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    PYTHON_VERSION: [ "3.9", "3.10" ]

    container: ubuntu:16.04
    steps:
      - uses: actions/checkout@v2
      - name: set env
        run: |
          apt update  \
             && apt upgrade -y \
             && apt install -y \
                 ninja-build \
                 software-properties-common \
                 python3-dev \
                 python3-pip\
             && apt clean \
             && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
             && apt update  \
             && apt install -y gcc-4.9 g++-4.9  \
             && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 100 \
             && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 100 \
             && rm -rf /var/lib/apt/lists/* \
             && pip3 install --upgrade pip==20.3.4 \
             && pip3 install --no-cache-dir conan==1.45.0 cmake==3.21.0

      - name: Install conan dependencies
        run: |   
          ls
          conan profile new default --detect 
          conan profile update settings.compiler.libcxx=libstdc++11 default
          conan profile update settings.compiler=gcc default 
          conan profile update settings.compiler.version=4.9 default 
          conan profile update env.CXX=g++ default 
          conan profile update env.CC=gcc default 
          conan install -if build . --build missing -s build_type=Release

      - name: Build library
        run: |
          cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=11 -DALLOW_EXAMPLES=ON -DALLOW_TESTS=ON -DENABLE_TESTS_MEASUREMENTS=OFF -DALLOW_BENCHMARK=ON -DDEV_MODE=ON
          cmake --build . --parallel  --target all
        working-directory: build/



      - name: Run cmake tests
        run: ctest -C Release --output-on-failure #--extra-verbose  #--rerun-failed -R message-id
        working-directory: build/

